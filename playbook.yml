---
# ansible-playbook deploy_elasticsearch.yml -vv --private-key=/path/to/ec2/pri/key

- name: Stage instance(s)
  hosts: 127.0.0.1
  connection: local
  user: "{{user}}"
  gather_facts: false

  tags:
      - stage

  vars_files:
    - vars.yml

  # Launch 1 instance with the following parameters.  Register the output.

  tasks:
    - name: Launch instance 
      local_action: 
          module: ec2
          keypair: "{{keypair}}"
          group: "{{security_group}}"
          instance_type: "{{instance_type}}"
          image: "{{image}}"
          region: "{{region}}"
          wait: yes
          count: "{{instance_count}}"
          volumes:
          - device_name: /dev/sda1
            volume_size: "{{disk_size}}"
      register: ec2      
    
    # Use with_items to add each instances public IP to a new hostgroup for use in the next play.

    - name: Add new instances to host group
      local_action: add_host name={{item.public_dns_name}} groups=deploy
      with_items: ec2.instances

    - name: Tag instances
      local_action: ec2_tag resource={{ item.id }} region={{region}} state=present
      with_items: ec2.instances
      args:
        tags:
          Name: "{{omeka_tag}}"


    # Use the ec2_vol module to create volumes for attachment to each instance. Use with_items to attach to each instance (by returned id) launched previously.

    #- name: Create a volume and attach
    #  local_action: ec2_vol volume_size=20 instance=${item.id}
    #  with_items: ${ec2.instances}

    - name: Wait for SSH to be available 
      local_action: wait_for host={{item.public_dns_name}} port=22
      with_items: ec2.instances
 
    - name: Breathing room (Ansible uses python apt, has issues running directly after boot)
      pause: seconds=15



# This play targets the new host group

- name: Configure instance
  hosts: deploy
  user: ubuntu
  remote_user: ubuntu
  sudo: yes
  gather_facts: true

  tags:
    - config
    - configure 

  vars_files:
    - vars.yml

  tasks:
    - include: tasks/install.yml
    - include: tasks/config.yml
    - include: tasks/db.yml
    - include: tasks/apache.yml
    - include: tasks/omeka.yml
    
  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
      sudo: true
      
- name: Assign permanent IP's
  hosts: 127.0.0.1
  connection: local
  user: "{{user}}"
  gather_facts: false
  vars_files:
    - vars.yml

  tasks:
    - name: Allocate a new elastic IP and associate it with an instance
      ec2_eip: instance_id={{ item.id }} region=us-east-1
      with_items: ec2.instances
      
    - name: hostname
      lineinfile: line='127.0.0.1        {{ hostname }}' state=present insertafter=EOF dest=/etc/hosts
      sudo: true
      when: hostname is defined
